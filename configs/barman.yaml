instance_dir: barman/generated_basic
generalized_instance_dir: barman/generated
domain_file: barman/generated_domain.pddl
domain_name: barman
n_instances: 101
start: 1
end: 100
instances_template: instance-{}.pddl
# Seems like there will be a lot of restrictions on actions due to the types specifications, other than preconditions etc....
domain_intro: |
      I am a barman who manipulates drink dispensers, shots and a shaker to serve a desired set of drinks. Shots and shakers are types of containers. Ingredients and cocktails are types of beverages.
      Here are the actions I can do

      Grasp a container
      Leave a container on the table
      Fill a shot
      Refill a shot
      Unfill a shot
      Clean a shot
      C-pour contents of a shot into a clean shaker
      D-pour contents of a shot into a used shaker
      Empty a shaker
      Wash a shaker
      Shake a shaker
      Pour contents of a shaker into a shot

      I have the following restrictions on my actions:
      I can only grasp an object that is a container.
      I can only grasp a container with my hand.
      I can only grasp a container if the container is on the table.
      I can only grasp a container if my hand is empty.
      Once I grasp a container, I am holding the container.
      I can only leave a container on the table if I am holding the container.
      Once I leave a container on the table, my hand becomes empty.
      I can fill a shot with an ingredient only from a dispenser that dispenses that ingredient.
      I can only fill a shot if I am holding the shot with one of my hands.
      I can only fill a shot if my other hand is empty.
      I can only fill a shot if the shot is empty.
      I can only fill a shot if the shot is clean.
      Once I fill a shot, the shot is no longer empty.
      Once I fill a shot, the shot is no longer clean.
      Once I fill a shot with an ingredient, the shot contains that ingredient.
      Once I fill a shot with an ingredient, the shot is used with that ingredient.
      I can only refill a shot with an ingredient if the shot has been used with the same ingredient.
      I can only refill a shot if I am holding the shot with one of my hands.
      I can only refill a shot if my other hand is empty.
      I can only refill a shot if the shot is empty.
      Once I refill a shot, the shot is no longer empty.
      Once I refill a shot with an ingredient, the shot contains that ingredient.
      I can only unfill a shot if I am holding the shot.
      I can only unfill a shot if the shot contains some beverage.
      Once I unfill a shot, the shot no longer contains the beverage.
      Once I unfill a shot, the shot becomes empty.
      I can only clean a shot if I am holding the shot with one of my hands.
      I can only clean a shot if the shot is empty.
      I can only clean a shot if my other hand is empty.
      Once I clean a shot, the shot becomes clean.
      Once I clean a shot, the shot is no longer used.
      I can c-pour contents of a shot into a clean shaker only if the shaker is clean.
      I can c-pour contents of a shot into a clean shaker only if I am holding the shot.
      I can c-pour contents of a shot into a clean shaker only if the shot contains an ingredient.
      I can c-pour contents of a shot into a clean shaker only if the shaker is empty.
      I can c-pour contents of a shot into a clean shaker only if the shaker has a higher level available.
      Once I c-pour the contents of a shot into a clean shaker, the shot no longer contains the ingredient.
      Once I c-pour the contents of a shot into a clean shaker, the shot is empty.
      Once I c-pour the contents of a shot into a clean shaker, the shaker is no longer empty.
      Once I c-pour the contents of a shot into a clean shaker, the shaker contains the ingredient.
      Once I c-pour the contents of a shot into a clean shaker, the shaker is no longer clean.
      Once I c-pour the contents of a shot into a clean shaker, the shaker is unshaked.       
      Once I c-pour the contents of a shot into a clean shaker, the shaker-level is no longer at its previous level.
      Once I c-pour the contents of a shot into a clean shaker, the shaker-level is at its next level.                     
      I can d-pour contents of a shot into a used shaker only if the shaker is unshaked.
      I can d-pour contents of a shot into a used shaker only if I am holding the shot.
      I can d-pour contents of a shot into a used shaker only if the shot contains an ingredient.
      I can d-pour contents of a shot into a used shaker only if the shaker has a higher level available.
      Once I d-pour the contents of a shot into the used shaker, the shot no longer contains the ingredient.
      Once I d-pour the contents of a shot into the used shaker, the shot is empty.
      Once I d-pour the contents of a shot into the used shaker, the shaker contains the ingredient.
      Once I d-pour the contents of a shot into the used shaker, the shaker-level is no longer at its previous level.
      Once I d-pour the contents of a shot into the used shaker, the shaker-level is at its next level.
      I can empty the shaker only if I am holding the shaker.
      I can empty the shaker only if the shaker contains a beverage.
      I can empty the shaker only if the shaker is shaked.
      I can empty the shaker only if the shaker-level is not at the shaker-empty-level.
      Once I empty the shaker, the shaker is no longer shaked.
      Once I empty the shaker, the shaker-level is the same as the shaker-empty-level.
      Once I empty the shaker, the shaker no longer contains the beverage.
      Once I empty the shaker, the shaker is empty.
      I can wash the shaker only if I am holding the shaker with one of my hands.
      I can wash the shaker only if the other hand is empty.
      I can wash the shaker only if the shaker is empty.
      Once I wash the shaker, the shaker is clean.
      I can shake the shaker only if I am holding the shaker with one of my hands.
      I can shake the shaker only if the other hand is empty.
      I can shake the shaker only if the shaker contains two ingredients. And those two ingredients form a cocktail.
      I can shake the shaker only if the shaker is unshaked.
      Once I shake the shaker, the shaker is no longer unshaked.
      Once I shake the shaker, the shaker is shaked.
      Once I shake the shaker, the shaker no longer contains the two ingredients.
      Once I shake the shaker, the shaker contains the cocktail formed by the two ingredients.
      I can pour contents of a shaker into a shot only if I am holding the shaker.
      I can pour contents of a shaker into a shot only if the shaker is shaked.
      I can pour contents of a shaker into a shot only if the shot is empty.
      I can pour contents of a shaker into a shot only if the shot is clean.
      I can pour contents of a shaker into a shot only if the shaker contains the beverage.
      I can pour contents of a shaker into a shot only if the shaker has a lower level available.
      Once I pour the contents of a shaker into a shot, the shot is no longer clean.
      Once I pour the contents of a shaker into a shot, the shot is no longer empty.
      Once I pour the contents of a shaker into a shot, the shot contains the beverage.
      Once I pour the contents of a shaker into a shot, the shaker-level is no longer at its previous level.
      Once I pour the contents of a shaker into the shot, the shaker-level is at its lower level.


#domain_intro_cost: |
   


actions:
  {grasp: "use {} to grasp {}",
   leave: "use {} to put down {}",
   fill-shot: "fill {} with {} while holding it in {} and using {} to operate {}",
   refill-shot: "refill {} with {} while holding it in {} and using {} to operate {}",
   empty-shot: "use {} to unfill {} of {}",
   clean-shot: "clean {} of {} while holding it in {} and using {} to clean",
   pour-shot-to-clean-shaker: "c-pour the contents of {} which consist of {} into {} using {}, bringing the shaker's level from {} to {}",
   pour-shot-to-used-shaker: "d-pour the contents of {} which consist of {} into {} using {}, the shaker's level from {} to {}",
   empty-shaker: "use {} to empty {} of {}, bringing the shaker's level from {} to {}",
   clean-shaker: "holding it with {} and cleaning with {}, wash {}",
   shake: "shake up {} from {} and {} in {} while holding the shaker with {} and keeping {} empty",
   pour-shaker-to-shot: "pour {} into {} using {} to hold {}, bringing the shaker's level from {} to {}"}


predicates:
  {ontable: "{} is on the table",
   holding: "{} is holding {}",
   handempty: "{} is empty",
   empty: "{} is empty",
   contains: "{} contains {}",
   clean: "{} is clean",
   used: "{} has been used and contains traces of {}",
   dispenses: "{} dispenses {}",
   shaker-empty-level: "{} will be empty at level {}",
   shaker-level: "{} is at level {}",
   next: "{} is the level before {}",
   unshaked: "{} is unshaked",
   shaked: "{} is shaked",
   cocktail-part1: "{} has a first ingredient of {}",
   cocktail-part2: "{} has a second ingredient of {}"
   }

predicate_mapping:
   {
   "ontable": "on the table",
   "clean": "clean",
   "handempty": "empty",
   "holding": "holding",
   "contains": "contains",
   "used": "has been used with",
   "dispenses": "dispenses",
   "next": "the next level of",
   "unshaked": "unshaked",
   "shaked": "shaked"
   }  


# encoded_objects: dictionary of object names, have to be alphabetical - CHECK INSTANCE EXAMPLES FROM LLM+P WORK --------------- 
encoded_objects:
  {"shot": "shot{}", "right": "right hand", "left": "left hand", "shaker": "shaker{}", "ingredient": "ingredient{}", "dispenser": "dispenser{}", "cocktail": "cocktail{}", "l": "level{}"}

callbacks:
   - t1_gen_goal_directed_instances